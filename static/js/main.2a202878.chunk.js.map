{"version":3,"sources":["logo.svg","components/EmployeesTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeesTable","emp","employees","console","log","Table","striped","bordered","hover","map","employee","src","picture","medium","name","last","first","phone","email","App","useState","setEmployees","useEffect","axios","get","then","response","data","results","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAAe,I,8BCqCAA,MAnCf,YAAwC,IAChCC,EAD+B,EAAbC,UAGxB,OADAC,QAAQC,IAAIH,GAEV,8BACE,eAACI,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,yCACA,sCACA,uCACA,4CAGJ,gCACGP,EAAIQ,KAAI,SAACC,GACR,OACE,+BACE,6BACE,qBAAKC,IAAKD,EAASE,QAAQC,WAE7B,+BACGH,EAASI,KAAKC,KADjB,IACwBL,EAASI,KAAKE,SAEtC,6BAAKN,EAASO,QACd,6BAAKP,EAASQ,sBCFfC,MApBf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACRlB,EADQ,KACGmB,EADH,KAQb,OANFC,qBAAU,WACRC,IAAMC,IAAI,gDAAgDC,MAAK,SAAAC,GAC7DL,EAAa,YAAIK,EAASC,KAAKC,eAEhC,IACHzB,QAAQC,IAAIF,GAER,sBAAK2B,UAAU,MAAf,UACE,iCACE,sDAIF,cAAC,EAAD,CAAgB3B,UAAWA,QCRlB4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2a202878.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useState, useEffect } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nfunction EmployeesTable({ employees }) {\r\n  const emp = employees;\r\n  console.log(emp);\r\n  return (\r\n    <div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Picture</th>\r\n            <th>Name</th>\r\n            <th>Phone</th>\r\n            <th>Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {emp.map((employee) => {\r\n            return (\r\n              <tr>\r\n                <td>\r\n                  <img src={employee.picture.medium} />\r\n                </td>\r\n                <td>\r\n                  {employee.name.last} {employee.name.first}\r\n                </td>\r\n                <td>{employee.phone}</td>\r\n                <td>{employee.email}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeesTable;\r\n","import React, {useState, useEffect} from \"react\"\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from \"axios\"\nimport EmployeesTable from \"./components/EmployeesTable\";\nfunction App() {\nconst [employees, setEmployees]=useState([]);\nuseEffect(()=>{\n  axios.get(\"https://randomuser.me/api/?results=10&nat=us\").then(response =>{\n    setEmployees([...response.data.results])\n  })\n}, [])\nconsole.log(employees)\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Employee Directory</h1>\n      \n        \n      </header>\n      <EmployeesTable employees={employees}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}